INSERT INTO PERSON(FIRSTNAME, LASTNAME, DATEOFBIRTH)
	VALUES ('Test', 'User', '1992-08-24')

 --SELECT * FROM PERSON
 
INSERT INTO Email
	VALUES ('test2@gmail.com')

SELECT * FROM eMAIL

INSERT INTO PersonEmail
	VALUES (2, 2, 0)

SELECT * FROM personeMAIL

INSERT INTO USERS
	VALUES (2, 'password', 2);

SELECT * FROM USERS;

--INSERT INTO Candidate
--	VALUES (1, '
--');

INSERT INTO Candidate
	VALUES (1, 'Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...');

SELECT * FROM Candidate;

INSERT INTO Pages
	VALUES(2,1)

SELECT * FROM Pages

INSERT INTO URLS
	VALUES ('Facebook');
INSERT INTO URLS
	VALUES ('Youtube');

SELECT * FROM URLS;

INSERT INTO PageURLS
	VALUES (1, 1, 'facebook.com');

INSERT INTO PageURLS
	VALUES (2, 3, 'https://www.youtube.com/embed?listType=playlist&list=RDjX6kn9_U8qk');

SELECT * FROM PageURLS

SELECT * FROM Policies

SELECT Policies.PolicyID, POLICYNAME, TITLE, DETAILS
	FROM Policies
JOIN PolicyCard
	ON PolicyCard.POLICYID =  Policies.POLICYID

SELECT PLATFORMID, TITLE, DESCRIPTION
	FROM KeyPlatforms

-- Procedure to add a person
-- Parameters: first name, last name, birthday and gender
-- Return: ID of the newly person
-- Note: Assumes that the person being added is a new person because many people share the same name.
--CREATE PROCEDURE AddPerson(	
--	@FirstName VARCHAR(250) = NULL, 
--	@LastName VARCHAR(250) = NULL,
--	@Birthday DATE = NULL,
--	@Gender SMALLINT
--)
--AS
--	DECLARE @ReturnID INT, @
--	@Sql NVARCHAR(MAX) = 'INSERT INTO Person VALUES(@FN, @LN'

--	SET @ReturnID = 0

--	IF @Birthday IS NOT NULL AND LEN(LTRIM(@Birthday)) > 0
--		BEGIN
--			SET @Sql += ', @BD' ;
--		END
--	IF @Gender > 0
--		BEGIN
--			SET @Sql += ', @G'; 
--		END 

--	SET @Sql += ')';
--	EXEC sp_executesql @Sql, N'@FN VARCHAR(250), @LN VARCHAR(250), @BD DATE, @G SMALLINT', 
--		@FN = @FirstName, @LN = @LastName, @BD = @Birthday, @G = @Gender

--	SET @ReturnID = SCOPE_IDENTITY();

--	RETURN @ReturnID
--GO

select * from Pages

select * from Candidate

SELECT * FROM Users

select * from Person

DELETE FROM PageURLS WHERE PageID = 34
SELECT * FROM PageURLS WHERE PageID = 34

SELECT * FROM URLS ORDER BY URLID ASC

DELETE FROM PERSON WHERE ID = 11

INSERT INTO URLS
	VALUES ('Instagram')
INSERT INTO URLS
	VALUES ('LinkedIn')
INSERT INTO URLS
	VALUES ('Twitter')
INSERT INTO URLS
	VALUES ('Donate')
INSERT INTO URLS
	VALUES ('Lawn Sign')
INSERT INTO URLS
	VALUES ('Volunteer')
INSERT INTO URLS
	VALUES ('Profile Picture')
INSERT INTO URLS
	VALUES ('Key Platform Image')

INSERT INTO Policies
	VALUES ('Economic')
INSERT INTO Policies
	VALUES ('Social')
INSERT INTO Policies
	VALUES ('Environment')
INSERT INTO Policies
	VALUES ('Leadership')

SELECT * FROM URLS

SELECT * FROM PolicyCard

select * from urls join PageURLS ON PageURLS.URLID = URLs.URLID JOIN Pages ON Pages.PAGEID = PageURLS.PAGEID

update PageURLS set URLID = 2, LINK='https://www.youtube.com/embed?listType=playlist&list=RDjX6kn9_U8qk'
	WHERE PAGEID = 3

select * from Pages

select * from email

delete from PageURLS WHERE URLID = 1

INSERT INTO PageURLS
	VALUES(6,3, 'https://www.gofundme.com/en-ca')

INSERT INTO PageURLS
	VALUES(7,3, 'https://printcalgary.com/products/lawn-signs/')

INSERT INTO PageURLS
	VALUES(1,3, 'https://facebook.com')
INSERT INTO PageURLS
	VALUES(9,3, 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_640.png')

SELECT * FROM POLICIES

SELECT * FROM PageURLS where pageID = 14
SELECT * FROM URLS

SELECT * 
	FROM PersonEmail
JOIN Email 
	ON PersonEmail.EmailID = Email.EmailID
WHERE EMAILADDRESS = 'test@gmail.com'
AND EMAILTYPE = 1

SELECT * FROM Pages

SELECT * FROM PERSON
JOIN Users ON PersonID = ID

SELECT * FROM Policies
SELECT * FROM Pages
SELECT * FROM KeyPlatforms

SELECT * FROM Candidate
WHERE CANDIDATEID = 16

SELECT * FROM PAGEURLS
WHERE PAGEID = 14
AND URLID = 6